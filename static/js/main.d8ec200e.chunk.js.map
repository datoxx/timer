{"version":3,"sources":["Length.js","App.js","index.js"],"names":["Length","title","changeTime","type","time","formatTime","className","onClick","App","useState","displayTime","setDisplayTime","breakTime","setBreakTime","sessionTime","setSessionTime","timerOn","setTimerOn","onBreak","setOnBreak","Audio","breakSound","playBreakSound","currentTime","play","minutes","Math","floor","seconds","amount","prev","Date","getTime","nextDate","onBreakVariable","interval","setInterval","localStorage","clear","setItem","clearInterval","getItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAuBeA,EArBA,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,WAC5C,OACI,gCACI,6BAAKJ,IACL,sBAAKK,UAAU,YAAf,UACI,wBAAQA,UAAU,qBACdC,QAAS,kBAAML,GAAY,GAAIC,IADnC,SAGI,mBAAGG,UAAU,uBAAb,8BAEJ,6BAAKD,EAAWD,KAChB,wBAAQE,UAAU,qBACdC,QAAS,kBAAML,EAAW,GAAIC,IADlC,SAGI,mBAAGG,UAAU,uBAAb,mCC2GLE,MAvHf,WAEE,MAAsCC,mBAAS,MAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAkCF,mBAAS,KAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAsCJ,mBAAS,MAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA8BR,oBAAS,GAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAoCV,mBAAS,IAAIW,MAAO,8GAAxD,mBAAOC,EAAP,KAIMC,GAJN,KAIuB,WACrBD,EAAWE,YAAc,EACzBF,EAAWG,SAIPnB,EAAa,SAACD,GAClB,IAAIqB,EAAUC,KAAKC,MAAMvB,EAAK,IAC1BwB,EAAUxB,EAAO,GAErB,OAASqB,EAAU,GAAK,IAAMA,EAASA,GAAW,KAAOG,EAAU,GAAK,IAAMA,EAASA,IAGnF1B,EAAa,SAAC2B,EAAQ1B,GAC1B,GAAW,SAARA,EAAiB,CAClB,GAAGS,GAAa,IAAMiB,EAAS,EAC7B,OAEFhB,GAAa,SAACiB,GAAD,OAAUA,EAAOD,SACzB,CACL,GAAGf,GAAe,IAAMe,EAAS,EAC/B,OAEFd,GAAe,SAACe,GAAD,OAAUA,EAAOD,KAC5Bb,GACFL,EAAeG,EAAce,KAgDnC,OACE,sBAAKvB,UAAU,mBAAf,UACE,oBAAIA,UAAU,YAAd,uBACA,sBAAKA,UAAU,iBAAf,UACE,cAAC,EAAD,CACEL,MAAO,aACPC,WAAYA,EACZC,KAAM,QACNC,KAAMQ,EACNP,WAAYA,IAEd,cAAC,EAAD,CACEJ,MAAO,eACPC,WAAYA,EACZC,KAAM,UACNC,KAAMU,EACNT,WAAYA,OAGhB,oBAAIC,UAAU,eAAd,SAA8BY,EAAU,QAAU,YAClD,oBAAIZ,UAAU,QAAd,SAAuBD,EAAWK,KAClC,wBAAQJ,UAAU,4BAA4BC,QAhE9B,YAEP,IAAIwB,MAAOC,UADtB,IAEIC,GAAW,IAAIF,MAAOC,UAFb,IAGTE,EAAkBhB,EAEtB,IAAIF,EAAS,CACX,IAAImB,EAAWC,aAAY,YAClB,IAAIL,MAAOC,UACRC,IACRtB,GAAe,SAACmB,GACd,OAAKI,GAAmBJ,GAAQ,GAC9BR,IACAY,GAAkB,EAClBf,GAAW,GACJP,GACEsB,GAAmBJ,GAAQ,GACpCR,IACAY,GAAkB,EAClBf,GAAW,GACJL,GAEFgB,EAAO,KAEhBG,GAvBO,OAyBR,IACHI,aAAaC,QACbD,aAAaE,QAAQ,cAAeJ,GAGnCnB,GACDwB,cAAcH,aAAaI,QAAQ,gBAErCxB,GAAYD,IA8BV,SACGA,EACC,mBAAGV,UAAU,iBAAb,iCAEA,mBAAGA,UAAU,iBAAb,kCAGJ,wBAAQA,UAAU,iBAAiBC,QAlCrB,WAChBI,EAAe,MACfE,EAAa,KACbE,EAAe,OA+Bb,SACA,mBAAGT,UAAU,iBAAb,6B,MC9GNoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.d8ec200e.chunk.js","sourcesContent":["\r\n\r\nconst Length = ({title, changeTime, type, time, formatTime}) => {\r\n    return ( \r\n        <div>\r\n            <h4>{title}</h4>\r\n            <div className=\"time-sets\">\r\n                <button className=\"btn green accent-5\"\r\n                    onClick={() => changeTime(-60, type)}\r\n                >\r\n                    <i className=\"large material-icons\">arrow_downward</i>\r\n                </button>\r\n                <h4>{formatTime(time)}</h4>\r\n                <button className=\"btn green accent-5\"\r\n                    onClick={() => changeTime(60, type)}\r\n                >\r\n                    <i className=\"large material-icons\">arrow_upward</i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Length;","import React, { useState } from 'react';\nimport './App.css';\nimport Length from './Length';\n\nfunction App() {\n\n  const [displayTime, setDisplayTime] = useState(25*60);\n  const [breakTime, setBreakTime] = useState(5*60);\n  const [sessionTime, setSessionTime] = useState(25*60);\n  const [timerOn, setTimerOn] = useState(false);\n  const [onBreak, setOnBreak] = useState(false);\n  const [breakSound, setBreakSound] = useState(new Audio( \"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n  ));\n\n\n  const playBreakSound = () => {\n    breakSound.currentTime = 0;\n    breakSound.play();\n\n  }\n\n  const formatTime = (time) => {\n    let minutes = Math.floor(time/60);\n    let seconds = time % 60;\n\n    return ((minutes < 10 ? \"0\" + minutes: minutes) + \":\" + (seconds < 10 ? \"0\" + seconds: seconds));\n  };\n\n  const changeTime = (amount, type) => {\n    if(type == 'break') {\n      if(breakTime <= 60 && amount < 0) {\n        return;\n      }\n      setBreakTime((prev) => prev + amount);\n    } else {\n      if(sessionTime <= 60 && amount < 0) {\n        return;\n      }\n      setSessionTime((prev) => prev + amount);\n      if(!timerOn) {\n        setDisplayTime(sessionTime + amount);\n      }\n    }\n  }\n\n  const controlTime = () => {\n    let second = 1000;\n    let date = new Date().getTime();\n    let nextDate = new Date().getTime() + second;\n    let onBreakVariable = onBreak;\n\n    if(!timerOn) {\n      let interval = setInterval(() => {\n        date = new Date().getTime();\n        if(date > nextDate) {\n          setDisplayTime((prev) => {\n            if( !onBreakVariable && prev <= 0) {\n              playBreakSound();\n              onBreakVariable = false;\n              setOnBreak(true);\n              return breakTime;\n            } else if( onBreakVariable && prev <= 0) {\n              playBreakSound(); \n              onBreakVariable = true;\n              setOnBreak(false);\n              return sessionTime;\n            } \n            return prev - 1; \n          });\n          nextDate += second;\n        }\n      }, 30);\n      localStorage.clear();\n      localStorage.setItem('interval-id', interval)\n    }\n\n    if(timerOn) {\n      clearInterval(localStorage.getItem(\"interval-id\"));\n    }\n    setTimerOn(!timerOn)\n  };\n\n  const resetTime = () => {\n    setDisplayTime(25*60);\n    setBreakTime(5*60);\n    setSessionTime(25*60);\n  }\n\n  return (\n    <div className=\"App center-align\">\n      <h1 className=\"mainTitle\">Set Timer</h1>\n      <div className=\"dual-container\">\n        <Length \n          title={\"Break Time\"} \n          changeTime={changeTime} \n          type={\"break\"} \n          time={breakTime} \n          formatTime={formatTime} \n        />\n        <Length \n          title={\"Session Time\"} \n          changeTime={changeTime} \n          type={\"session\"} \n          time={sessionTime} \n          formatTime={formatTime} \n        />\n      </div> \n      <h3 className=\"sesitonTitle\">{onBreak ? \"Break\" : \"Session\"}</h3>\n      <h1 className=\"timer\">{formatTime(displayTime)}</h1>\n      <button className=\"btn-large  green accent-5\" onClick={controlTime}>\n        {timerOn ? (\n          <i className=\"material-icons\">pause_circle_filled</i>\n        ): (\n          <i className=\"material-icons\">play_circle_filled</i>\n        )}\n      </button>\n      <button className=\"btn-large lime\" onClick={resetTime}>\n      <i className=\"material-icons\">autorenew</i>\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'materialize-css/dist/css/materialize.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}